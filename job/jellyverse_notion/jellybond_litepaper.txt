# Whitepaper Jellybond

This paper aims to outline the technical functionality and design principles of a decentralized bonding protocol called JellyBond.

JellyBond is a fork of the Chicken Bonds protocol that was deployed on the Ethereum network in the fourth quarter of 2022. As a tribute to the contributions made by the Liquity Team to the decentralized finance industry, this paper introduces an updated version of Chicken Bonds V1 for  DeFi Meta Chain, incorporating elements from the Chicken Bonds Whitepaper.

## Abstract

JellyBond utilizes a unique mechanism to enhance yield opportunities for end-users while bootstrapping protocol-owned liquidity (POL) at no cost. This is achieved through the allocation of additional yield from both POL and user-bonded underlying DFI to newly issued "boosted" tokens, bDFI.

The protocol operates as an autonomous self-bootstrapping treasury, powered by an innovative bonding mechanism. Users can deposit DFI in exchange for accruing bDFI, which they can either redeem for their principal while forfeiting the accrued amount, or trade in for the accrued bDFI.

The underlying DFI acquired by the system supports the bDFI supply. While a portion of the TKN in the treasury can be redeemed directly by bDFI holders, another portion adds permanent value to the redeemable value through its yield. Combined with the yield from pending bonds, the bDFI benefits from a steadily rising price floor, making it an attractive and anonymous investment for amplified staking rewards.

## 1. **Introduction: DeFi 2.0**

The DeFi boom in summer 2020 brought about a proliferation of DeFi projects, making it increasingly challenging for new protocols to secure liquid markets for their tokens. Many projects struggled to acquire liquidity from providers who chase short-term yield farming opportunities, resulting in high costs for temporary liquidity. This liquidity often lacks stickiness and quickly moves on as higher-yielding options become available.

Recently, DeFi 2.0 protocols such as Olympus Pro, Ondo, and Tokemak have offered alternative methods of acquiring liquidity, which are closer to leasing or buying. While they address the issue of stickiness, they still come at a cost and may not be accessible to all projects.

Chicken Bonds represents a major breakthrough in liquidity acquisition technology, working with any underlying token (TKN) that generates yield, whether through a DEX, lending protocol, or native staking.

JellyBonds V1 takes this a step further by enabling users to earn amplified yield on staking DFI. Future versions will incorporate bonding mechanisms for additional tokens on the DeFiChain and DeFiMetaChain. The accrued POD can be used to meet the needs of the ecosystem, which will have a positive impact on the dUSD price.

The system offers strong benefits to bond holders, Jellyverse and DeFiChain, while minimizing risk:

- Zero-Cost Liquidity Accumulation of DFI: The system obtains treasury assets through a self-bootstrapping mechanism, without incurring any costs. The bonding dynamics incentivize users to bond their DFI, as they can earn amplified yields, which can positively impact the ecosystem, such as increasing the value of other tokens like dUSD and JLY, or reducing the DFI supply.
- Flexible and Low-Risk Bonding for Users: Bond holders have the option to withdraw their deposited principal at any time, instead of converting it to "boosted DFI". This makes the bonding fully reversible and eliminates any commitment from bond holders to the protocol. Furthermore, bonds are represented as NFTs, which can be traded on JellySwap, making it an attractive option for bonds that have accumulated a significant amount of bDFI. The NFTs will be designed and executed with the highest standards of the gaming industry, including various rarities and functionalities, adding additional value to these rare bonds.
- System Stability and Resilience: The derivative token, bDFI, generated by JellyBond, has a hard price floor, supported by a direct redemption mechanism. Most of the time, bDFI trades at a premium above this price floor due to the amplified yield earned by the underlying DFI. The price floor can only increase over time, reducing the volatility and strong reflexivity inherent to secondary tokens issued by other bonding protocols.

We now proceed to describe the core bonding mechanisms which enable the amplified yield and liquidity acquisition. 

## 2. Treasury

The protocol operates a Treasury **R** consisting of three logical parts (“buckets”): 

1. Pending Bucket
2. Reserve Bucket
3. Permanent Bucket

Each bucket contains a certain quantity of DFI. The current state of the Treasury can thus be described by the following tuple:

$$
R := (q_p, q_r, q_d, r_p, r_r, r_d) 
$$

$$
q_i := value\:of\:respective\:bucket
$$

$$
r_i := rates\:of\: respective\: bucket
$$

**Pending Bucket**

The Pending Bucket contains DFI that has been deposited by users who are currently active bond holders. These bond holders have not yet redeemed their deposits, and their DFI remains in a state of pending. The DFI in the Pending Bucket are subjected to staking, with the rewards directed to the Reserve Bucket. Note that bond holders have the flexibility to withdraw their deposits at any time by "trading out."

**Reserve Bucket**

The Reserve Bucket houses a portion of the DFI relinquished by previous bond holders following a "trade in" event, as well as the yield from the Pending and Permanent Buckets. It provides direct backing to the bDFI supply through its redemption mechanism.

**Permanent Bucket**

Contains the other portion of the DFI relinquished by former bond holders. Funds in the Permanent Bucket are considered as POL (protocol owned liquidity) and can be used to actively stimulate dUSD and JLY price or to strategically increase or decrease liquidity in DEX pools. The Permanent Bucket is controlled by JLY token holder. 

## 2.1 Yield Amplification and Reinvestment

The Reserve Bucket earns not only from its own assets but also from the returns of the Pending and Permanent Bucket, resulting in a significantly amplified yield.

$$
r^* > r_r\:
$$

on the amount $q_r.$  We refer to this as yield amplification. By reinvesting all yields back into the Reserve Bucket instead of distributing them, the Reserve Bucket's value increases over time, even without any additional inflow of capital. The yield amplification causes the Reserve Bucket to grow at a faster pace than if the same funds were invested with a compounded rate of return $r_r$.

## 2.2 Reserve Bucket backing the Boosted Token

The protocol manages a fixed supply of DFI, which is governed by established rules for minting and burning. The bDFI supply is directly supported by the Reserve Bucket, and can be redeemed in exchange for a proportional share of the Reserve Bucket's assets. The total value will always be denominated in DFI, with redemptions conducted using DFI.

The term "redemption price" refers to the amount of DFI that each bDFI can be redeemed for and is represented by the formula $p_r:=\frac{q_r}{S}$, where $q_r$ is the quantity of bDFI being redeemed and $S$ is the total DFI supply. This price reflects the backing ratio of bDFI to DFI.

> **Invariant** (Redemption price never decreases). The protocol ensures that the redemption price $p_r$ (backing ratio, measured in DFI) can only ever increase, but never decrease.
> 

## 2.3 User interactions

Users can interact with the protocol in the followings ways:

- Bonding. Users can bond DFI in order to earn bDFI.
- Redemption. Users can redeem bDFI for DFI.

## 3. Bonding

Bonding is a key feature of JellyBond that enables the platform to expand its treasury through the issuance of boosted DFI tokens. By bonding any amount of DFI, users can exchange it for a "trade in" position represented by dynamic NFTs. The bonded DFI is added to the Pending Bucket.

As the bond matures, the virtual balance of bDFI tokens, represented by $s(t)$, accrues over time according to a curve that approaches a "cap" and guarantees a never-decreasing redemption price. To incentivize liquidity providers (LPs) of the bDFI/DFI exchange pair, a portion of the bonded amount is excluded from accruing bDFI and redirected as a trade-in fee (refer to section 5.5). The accrual curve may take the following form:

$$
s(t) :=\frac{b}{p_r}\:*\:\frac{t}{(t+α)}
$$

![Example with given parameters](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b6215abb-63bc-4883-b948-a1a1126755ee/Untitled.png)

Example with given parameters

$α$ parametrizes the slope of the curve and could be automatically adjusted by the protocol in
order to control the speed of the value accrual which depends on the evolving price premium (see 5.3).
We call the fraction $\frac{b}{p_r}$ the cap $c$ which corresponds to the amount of bDFI that could be minted by the protocol such that the redemption price would be kept constant if $b$ was entirely added to the Reserve Bucket. Therefore, the ratio between the cap and the bond corresponds to the ratio between the bDFI supply and the Reserve Bucket. Thus, we have

$$
\frac{c}{b} = \frac{S}{q_r}
$$

The owner of a bond can exit their position any time by choosing either of the following
options:

- trade out. Retrieve the principal foregoing the accrued bDFI.
- trade in. Obtain the accrued bDFI foregoing the bonded DFI.

![JellyBond03.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/14021f46-2c60-4d37-8071-fd2e3ec816e2/JellyBond03.png)

In both cases, the user's bond represented by the NFT is burned when the bond holder's position is closed. Depending on the option selected, the bonded DFI will either be returned to the user or it will be transferred from the Pending Bucket to both the Reserve Bucket and the Permanent Bucket in a manner determined by JellyBond's calculations (3.1.2).

## 3.1.1 Trade out

By "trade-out", the bond holder can retrieve the entire amount of bonded DFI, but the accrued balance of bDFI will not be minted. This option to withdraw the principal at any time makes bonding a relatively low-risk investment, with the user only incurring opportunity costs, in addition to the potential risks associated with smart contracts. During a "trade-out" event at time $t_{i+1}$ (where the previous event in the system took place at time $t_i$), the Treasury will undergo the following changes:

$$
g_p(t_{i+1}) := g_p(t_i)-b
$$

As an alternative, the bond holder may sell their NFT on the secondary market, likely receiving
a better return. The buyer of the NFT has the same rights against the protocol as the original bond holder.

## 3.1.2 Trade in

A user who chooses to trade in will give up the bonded DFI in exchange for the accrued balance of bDFI, which will be minted and distributed. Instead of holding onto the received bDFI, the user may choose to sell it on the open market and reinvest the proceeds by creating a new, typically larger bond.

Upon a trade-in event, the protocol takes possession of the bonded DFI, which is transferred from the Pending Bucket to the Reserve Bucket and the Permanent Bucket. To accomplish this, the bonded amount $b$ is first divided into two amounts $b_r$ and $b_d$ according to the ratio of the current accrued bDFI $s$ to the cap $c$.

$$
b_r= \frac{s}{c}*b=s*p_r
$$

The two amounts are then added to the Reserve and the Permanent Bucket, so that the Treasury
transitions to the following state:

$$
q_r(t_{i+1}) := q_r(t_i) + b_r = q_r(t_i) + s · p_r 
$$

$$
q_d(t_{i+1}) := q_d(t{i}) + b_d = q_d(t{i}) + b \:− \:s · p_r 
$$

$$
q_p(t_{i+1}) := q_p(t{i}) − b
$$

$$
S(t_{i+1}) := S(t_i) +s
$$

Note that a portion of the bonded amount may be diverted as an incentive for bDFI/DFI LP
(see 5.5) instead of being split between the mentioned buckets.

![4.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3a3fc247-2cae-4b88-8c6c-92ec87a39f6b/4.png)

## 3.2 Redemption

A holder can exchange their bDFI for DFI at any time. To do so, they must redeem $n$ bDFI, which will result in a payment of $n * p_r$ DFI. The calculation of the payment amount is made by multiplying the number of bDFI redeemed by the redemption price, which is equal to $p_r = \frac{q_r}{S}$. The DFI are then taken from the Reserve Bucket and given to the user, while the redeemed bDFI are burned. This results in a change in the state of the Treasury.

$$
q_r(t_{t+1}) := q_r(t_i) * ( 1- \frac{n}{S})
$$

$$
S(t_{i+1}):=S(t_i)-n
$$

To control the pace of redemptions and address potential extreme scenarios and unexpected events, JellyBond imposes a nominal redemption fee (refer to Section 5.4).

## 4. Staking inside the Pending and Reserve Bucket

JellyBond is designed to work with a variety of yield-bearing tokens. However, it's important to note that the yield source used can have an impact on both the risk for the user and the protocol. When using LPs or jUSD, the process is straightforward because they generate yield without adding additional risk.

Staking for DFI can be more challenging compared to other yield-bearing tokens because it requires an operator. This can introduce additional risk for both the user and the protocol. 

However, the DFI in both the Pending and Reserve Buckets will be staked to generate yield, with the yield from the Pending Bucket being redirected to the Reserve Bucket, thereby amplifying the yield and increasing $p_r$.

To maintain liquidity in the Pending and Reserve Buckets and further incentivize the price premium between bDFI and DFI, JellyLabs intends to donate master nodes as Proof of Liquidity (POL) for JellyBond.

### 4.1 Decentralized Staking

To ensure decentralized operation of JellyBond, master nodes are created through a tender process. Once either the Pending or Reserve Bucket collects 20,000 DFI, a master node is tendered. Participants can provide an "operator address", which JellyBond will use to create a master node. The operator will receive a small staking fee as reward for their role, while the node itself is controlled by the owner address. To run the master nodes, JellyBond requires a centralized entity to host them.

To ensure decentralized operation of JellyBond, the platform utilizes a tender process to create master nodes. Once the Pending or Reserve Bucket collects 20,000 DFI, a master node is tendered. Participants can provide an "operator address" that JellyBond will use to create the master node. The operator will receive a small staking fee as a reward for their role, while the node itself is controlled by the owner address.

However, it's important to note that running the master nodes requires a centralized entity to host them. While the tender process helps to ensure decentralization in terms of ownership and operation, the centralization of the physical nodes is an inherent limitation of the technology at this time. This does not apply for configurations with jUSD or LPs. 

## 4. Economics of Chicken Bonds

The value of the Boosted Token (bDFI) is derived from the Reserve Bucket, which serves as its direct backing, and the yield generated by the Treasury as a whole.

Given that the bDFI supply can be redeemed for a proportional share of the DFI held in the Reserve Bucket, the market capitalization of bDFI should at least equal the amount of DFI stored in the Reserve Bucket.

As a result, the redemption price ($p_r$) serves as a price floor, below which arbitrage opportunities become available. Buyers can purchase bDFI for less than the amount they would receive upon redemption. If the price of bDFI ever falls below the redemption price, a quick rebound is expected due to the buying pressure generated from redemptions.

In practice, we expect bDFI to trade significantly above its price floor most of the time due to the yield amplification and the initial donation of master nodes. 

Assuming that $r_r$ is equivalent to the market rate, $r_m$, the Reserve Bucket and, as a result, $p_r$, will experience growth that exceeds $r_m$ due to the additional yield generated from the Pending and Permanent Buckets. This increased return warrants a price premium, as the market should account for the amplified growth rate by paying a higher price for bDFI than the redemption price. We call this expected fair price $p_f$ and let

$$
λ=\frac{p_f}{p_r}
$$

denote the relative price premium or simply premium, i.e. the fraction between the fair price and the redemption price.

## 4.1 Profitability of bonding

Bonding is only profitable for λ > 1, i.e. if $p_f > p_r$. In that case, we can easily calculate the break
even point which is reached when $p_f · s(t) > b$, i.e. 

$$
\frac{p_f}{p_r}\frac{t}{(t+α)} > 1
$$

Using λ:

$$
λ \frac{t}{(t+α)} >1
$$

We can then solve for $t$ and write the break even point in terms of λ:

$$
t > \frac{α}{λ-1}
$$

The actual rate of return from bonding depends on λ and the shape (steepness) of the accrual
curve s(t) given by the parameter $α$.

## 4.2 Optimal rebonding strategy

When users bond, they receive a balance of bDFI in exchange for the deposited DFI. This bDFI balance can be redeemed by returning the original amount of DFI. JellyBond does not automatically compound the profits from bonding. To experience the benefits of compounding, bond holders can trade in their bDFI for DFI, then reinvest the proceeds in creating a new, larger bond and repeat this process. This allows for a compounding effect over time.

![5.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e94faf6a-31df-48a9-9079-cb322e053e85/5.png)

In the following derivation, we analyze the optimal rebonding strategy for users with a long-term
time horizon by deriving a time period $T_{opt}$ which maximizes the profitability of (regular) rebonding
for a given system configuration.

## 4.2.1 Optimal rebonding time

We assume that $b$ and $λ$ are constant for the sake of simplicity. However, the effect of $λ$ on $T_{opt}$ and the accuracy of the simplification depends on the volatility of $λ$ and the duration of the $T_{opt}$ period, which can be adjusted by the controller to be relatively short, mitigating the impact of volatility.

As the system matures, the yield amplification is expected to decrease due to the steady growth of the Reserve Bucket relative to the Pending and Permanent Buckets, which cannot sustainably maintain the same growth rate over the long term.

As the relative size of the Permanent Bucket decreases, its volatility should have a reduced impact on the fair price, making the simplification more accurate over time (based on the naive fair price formula, see 4.3.1). However, this assumption may not hold during the early growth phase.

Before determining the optimal rebonding time, we compare the final value of a user's bond (expressed in DFI) after a time period T without rebonding (denoted by $f$) to the final value of a bond that is rebonded at time $t < T$ (denoted by $f_r$).

**No rebonding** 

We multiply the accrued bDFI tokens from equation 2 by the market price which
we assume is equal to the fair price $p_f$ :

$$
f = p_f\frac{b}{p_r}\frac{T}{(T+α)}
$$

**With rebonding** 

At time $t$, when the user trades in and rebonds, the new bond amount $b$’
will be:

$$
b'=p_f\frac{b}{p_r}\frac{t}{(t+α)}
$$

From that point until time $T$, there is a period of length $T −t$, during which the value of the bond
will be:

$$
f_r= p_f\frac{b'}{p_r}\frac{T-t}{(T-t+α)}
$$

So finally we have

$$
f_r=b(\frac{p_f}{p_r})^2\frac{t}{(t+α)}\frac{T-t}{T-t+α}
$$

Now we can generalize this approach to $n$ regular rebonding events. We set $t=\frac{T}{n}$
and express the resulting bond value (measured in DFI) for a given rebonding period $t$ with $f_r(n)$ (note that the final period after the last rebonding event is also $\frac{T}{n}$).

$$
f_r(n)=b\:(\frac{p_f}{p_r})^n(\frac{\frac{T}{n}}{\frac{T}{n}+α})^{n-1}\frac{\frac{T}{n}}{\frac{T}{n}+α}
$$

$$
f_r(n)=b\:(\frac{p_f}{p_r})^n(\frac{\frac{T}{n}}{\frac{T}{n}+α})^{n}
$$

$$
f_r(n)=b\:(\frac{p_f}{p_r})^n(\frac{T}{T+nα})^n
$$

$$
f_r(n)=b\:(\frac{p_f}{p_r}\frac{T}{T+nα})^n
$$

To find the maximum value of $f_r(n$), we take its derivative with respect to $n$ (and we extend the
domain from natural to real numbers):

$$
f_r(n)=b\:(\frac{p_f}{p_r}\frac{T}{T+nα})^n(ln(\frac{p_f}{p_r}\frac{T}{T+nα})-\frac{nα}{T+ nα})
$$

Then equating it to zero: 

$$
f'_r(n)=0 \Longleftrightarrow ln(\frac{p_r}{p_r}\frac{T}{T+ nα})= \frac{nα}{T+ nα}
$$

$$
\frac{p_f}{p_r}\frac{T}{T+ nα} = e^\frac{nα}{T+ nα}
$$

Dividing both sides by e: 

$$
\frac{p_f}{ep_r}\frac{T}{T+nα}=e^{\frac{nα}{T+ nα}-1}
$$

$$
\frac{p_f}{ep_r}\frac{T}{T+nα}=e^{\frac{-T}{T+ nα}}
$$

$$
\frac{T}{T+nα}e^{\frac{T}{T+ nα}}=\frac{p_f}{ep_r}
$$

This has the form $ze^z=w$, i.e. it is a [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function), so:

$$
\frac{T}{T+nα}=W(\frac{p_f}{ep_r})
$$

$$
1+\frac{nα}{T}=\frac{1}{W\frac{p_f}{ep_r}}
$$

$$
n = \frac{T}{α}(\frac{1}{W(\frac{p_f}{ep_r})}-1)
$$

To find the optimal rebonding time period $T_{opt},$ we divide the total considered period $T$ by the optimal number of rebonding events $n$, and replace $n$ by the expression above:

$$
T_{opt}= \frac{T}{n}=\frac{αW(\frac{ep_r}{p_f})}{1-W(\frac{ep_r}{p_f})}
$$

We can write it in terms of premium λ = $\frac{p_f}{p_r}$ 

$$
T_{opt}=\frac{αW(\frac{e}{λ})}{1-W(\frac{e}{λ})}= \frac{α}{\frac{1}{W({\frac{e}{λ}})}-1}
$$

Note that as  $λ > 1$, $\frac{e}{λ} < e$, so $0 < W(\frac{e}{λ}) < 1$ and therefore $T_{opt} > 0$ , and that $T_{opt}(λ)$
 is a monotonic decreasing function, with $lim_{λ\rightarrow 1}$ $T_{opt}(λ) = + \infty$. 

To prove that rebonding is greater than break even time, we need to prove that: 

$$
W(\frac{e}{λ})>\frac{1}{λ}
$$

which can be done using the property $e^{W(x)}=\frac{x}{W(x)}$ and assuming $λ \ge 1.$

**With rebonding and trade-in fee**

Lets call 
		
	
	
		
			
				
					$τ$ 
				
			
		the fee to be used as rewards for bDFI/DFI DEX pair. At time t, when the user trade ins and rebonds, the new bond amount $b'$ will be: 

$$
b'=p_f\frac{b(1-τ )}{p_r}\frac{t}{(t+α)}
$$

Repeating the same process as before we obtain:

$$
f_r= b(\frac{(1-τ)p_f}{p_r}\frac{T}{(T+nα)})^n
$$

And then with the derivative equated to zero again:

$$
n = \frac{T}{α}(\frac{1}{W(\frac{(1-τ)p_f}{ep_r})}-1)
$$

Finally 

$$
T_{opt}= \frac{T}{n}=\frac{αW(\frac{ep_r}{(1-			τ)p_f})}{1-W(\frac{ep_r}{(1-			τ)p_f})}
$$

We can write it in terms of premium 							$λ 
= \frac{p_f}{p_r}$	. 

$$
T_{opt}=\frac{αW(\frac{e}{(1-			τ)p_f})}{1-W(\frac{e}{(1-			τ)p_f})}= \frac{α}{W(\frac{e}{(1-			τ)p_f})-1}
$$

### 4.2.2 Approximating the optimal rebonding time

As it turns out that the optimal rebonding time has no algebraic solution, we can also try to approximate it by finding the point in time that maximizes the APR.

We first define the *absolute premium* $ρ$ as the difference between the market (or fair) price and
the redemption price, i.e.: $ρ = p_f − p_r$ .

Using the function $a(t)$ to express **APR**

$$
a(t) = \frac{s(t)*p_f-b}{b}\frac{365}{t} = \frac{\frac{b}{p_r}\frac{t}{t+α}p_f-b}{b}\frac{365}{t}
$$

$$
a(t) = (\frac{p_f}{p_r}\frac{t}{t+α}-1)\frac{365}{t} \tag{28}
$$

we derive and equal to zero: 

$$
a'(t)=\frac{p_f}{p_r}\frac{t+α-t}{(t+α)^2}\frac{365}{t}-(\frac{p_f}{p_r}\frac{t}{t+α}-1)\frac{365}{t^2}
$$

(we assume t > 0)

$$
a'(t)=0 \Longleftrightarrow\frac{p_f}{p_r}\frac{α}{(t+α)^2}=(\frac{p_f}{p_r}\frac{t}{t+α}-1)\frac{1}{t}
$$

(we assume $p_r$> 0)

$$
a'(t) = 0 \Longleftrightarrow αp_ft = p_ft(t+α)-p_r(t+α)^2
$$

$$
a'(t) = 0 \Longleftrightarrow 0 = p_ft^2-p_r(t^2+2αt+α^2)
$$

$$
a'(t) = 0 \Longleftrightarrow (p_f-p_r)t^2-2αp_rt-a^2p_r = 0 
$$

And solving for $t$ (and getting the positive value): 

$$
t= \frac{2αp_r+\sqrt{(2αp_r)^2+4(p_f-p_r)α^2p_r}}{2(p_f-p_r)}
$$

$$
t = \frac{αp_r+\sqrt{(α^2p_r^2+α^2p_fp_r-α^2p_r^2}}{p_f-p_r}
$$

$$
t = \frac{αp_r+\sqrt{α^2p_fp_r}}{p_f-p_r}
$$

$$
t = \frac{αp_r+α\sqrt{p_fp_r}}{p_f-p_r}
$$

$$
t= α\frac{p_r+\sqrt{p_fp_r}}{p_f-p_r} \tag{29}
$$

In terms of the $\lambda$ defined in 4: 

$$
t = α\frac{1+\sqrt{\lambda}}{\lambda-1} \tag{30}
$$

Comparing 30 and 15, we can immediately see that the trade-in optimal time for APR is always strictly greater than break even time. 

Simulations yield results very close to those obtained for the optimal rebonding time in the previous section. 

**With a trade-in fee**  

Lets call $\tau$ the fee applied to the initial bond amount before trading in, then we would have: 

$$
a(t) = \frac{s(t)*p_f-b}{b}\frac{365}{t} = \frac{\frac{b(1-\tau)}{p_r}\frac{t}{t+\alpha}p_f-b}{b}\frac{365}{t}
$$

$$
a(t) = ((1-\tau)\frac{p_f}{p_r}\frac{t}{t+\alpha}-1)\frac{365}{t} \tag{31}
$$

link before, we derive and equal to zero: 

$$
a'(t) = (1-\tau)\frac{p_f}{p_r}\frac{t+\alpha-t}{(t+\alpha)^2}\frac{365}{t}-((1-\tau)\frac{p_f}{p_r}\frac{t}{t+\alpha}-1)\frac{365}{t^2}
$$

(we assume t > 0) 

$$
a'(t) = 0 \Longleftrightarrow (1-\tau)\frac{p_f}{p_r}\frac{\alpha}{(t+\alpha)^2}=((1-\tau)\frac{p_f}{p_r}\frac{t}{t+\alpha}-1)\frac{1}{t}
$$

(we assume $p_r > 0)$ 

$$
a'(t) = 0 \Longleftrightarrow (1-\tau)\alpha p_ft=(1-\tau)p_ft(t+\alpha)-p_r(t+\alpha)^2
$$

$$
a'(t) = 0 \Longleftrightarrow 0 = (1-\tau)p_ft^2-p_r(t^2+2\alpha t+\alpha^2)
$$

$$
a'(t) = 0 \Longleftrightarrow ((1-\tau)p_f-p_r)t^2-a\alpha p_rt-a^2p_r = 0
$$

And solving for $t$ (and getting the positive value):

$$
t = \frac{2 αp_r+\sqrt{(2 αp_r)^2+4((1-\tau)p_f-p_r) α^2p_r}}{2((1-\tau)p_f-p_r}
$$

$$
t = \frac{αp_r\sqrt{(1-\tau)\alpha^2p_fp_r}}{(1-\tau)p_f-p_r}
$$

$$
t = \alpha\frac{p_r+\sqrt{(1-\tau)p_fp_r}}{(1-\tau)p_f-p_r} \tag{32}
$$

In terms of the $\lambda$ defined in 4: 

$$
t = \frac{1+\sqrt{(1-\tau)p_fp_r}}{(1-\tau)p_f-p_r} \tag{33}
$$

## **4.3 Estimating the fair price** pf

We aim to determine the fair price $p_f$, which represents the expected value of bTKN in an idealized market scenario, where all participants are rational and well-informed. To achieve this, we present several methods to estimate $p_f$, including the naive and conservative approach, which are based on minimal economic assumptions, and the yield comparison and recursive approach, which make significant assumptions about market behavior and closely resemble economic models. It's important to note that while each method has its own strengths and limitations, none of them can be considered as a definitive answer to the fair price of bTKN.

### 4.3.1 Naive Approach

DFI is a yield-bearing token that offers potential returns through staking. This means that it provides a future payment or a continuous stream of cash flow. By considering the market rate or discount rate (denoted as $r_m$), we can calculate the present value ($PW$) of the token. Additionally, a compounding wrapper contract can be utilized around DFI to retain and compound the generated yield, offering the investor the option to redeem their wrapper share for a proportional share of the value held within the contract. Like a mutual fund, the value of the investor's share in the compounding contract is expected to reflect the inner value of the share, providing the investor with the value they receive upon redemption.

In Jelly Bonds, the Reserve Bucket represents a compounding wrapper with the added advantage of receiving returns from the Pending and Permanent Buckets in addition to its own yield. If these two other buckets were empty, the Reserve Bucket's present value ($PV$) expressed in TKN would equal its inner value ($q_r$), and the fair price of bTKN would match its redemption price ($p_r$). However, with non-empty Permanent and Pending Buckets, acting as additional yield sources, the value of the bDFI should be greater than $p_r$, as holding bDFI is a more attractive investment than holding DFI in a simple compounding contract. The extent of this difference is what remains to be determined.

Generally, if a token $x$ receives cash flows $F_1, F_2,..., F_n$from multiple differen sources, the $PV$ of the token is given by the sum of the PVs of the cash flows, i.e.

$$
PV(x) = PV(F1)+PV(F2)+...+PV(F_n)
$$

We suppose that the same rationale holds in principle if the yields are compounded in a redeemable wrapper contract instead of being paid out. 

While this applies to the Reserve Bucket, the Permanent Bucket cannot be redeemed on its own and only its yield is redeemable as part of the Reserve Bucket. As a result, we believe that the same amount of DFI within the Permanent Bucket has a weaker impact on the price of bDFI compared to if it were within the Reserve Bucket, even if it earns the same yield. To account for the permanent lock-in of the principal, we must discount its price impact by a factor $d_f < 1$. Assuming that $r_r = r_m$, we can express the present value of 1 unit of bDFI as follows:

$$
p_f = \frac{PV(Reserve Bucket)+PV(PendingBucket)+PV(Permanent Bucket)}{S}
$$

We can express the $PV$ of the Permanent Bucket in terms of the Reserve Bucket by converting bucket quantities, rates of return , and applying the discount factor: 

$$
PV (PermanentBucket)=q_d\frac{r_d}{r_r}d_f \tag{36}
$$

Regarding the Pending Bucket, its contents will eventually be transferred to the other two buckets (trade-in) or removed from the system (trade-out), and the protocol will mint additional bDFI. On the other hand, bonders have an incentive to rebond after trading in (as discussed in section 4.2), leading to a temporary increase in the size of the Pending Bucket. If we simplify the situation and assume that all effects cancel each other out in the aggregate and suppose that $r_p = r_r$, we can derive the fair price formula as follows:

$$
p_f = \frac{q_r+q_p+q_d\frac{r_d}{r_r}d_f}{S} \tag{37}
$$

We refer to this as the naive formula. Despite its apparent oversimplification (ignoring the possibility that rebonding may have a different effect on the price than assumed), it possesses intriguing properties that support its validity to some extent.

**Growth rate of bDFI supply and Treasury value** 

We hypothesize that in the long run, the supply of bDFI ($S$) should increase at approximately the same rate as the total value of the Treasury ($R_v$, measured in DFI). The reasoning behind this is that since bDFI constitutes an economic stake in the system, a faster rate of growth for $S$ relative to $R_v$ would lead to future dilution of bDFI, while a slower rate of growth would result in future appreciation. It is expected that the market will factor these effects into the current price of bDFI, resulting in a fair price ($p_f$) that corresponds to a price that results in the same relative growth rate for both.

As the backing ratio continues to increase, the value of the Reserve will grow faster than the total supply of bDFI ($S$), meaning that the other buckets (Pending and Permanent) must increase at a slower pace. This may not seem intuitive at first, but the Permanent Bucket will eventually grow slower due to its contribution of yield to the Reserve. Additionally, even with all users rebonding perfectly, the Pending Bucket is expected to eventually decrease over time relative to the Reserve (as confirmed through simulations).

$$
\frac{∆S}{S}= \frac{∆R_v}{R_v} \tag{38}
$$

Here, $∆S$ and $∆R$ respectively represent the change in $S$ and $R$ per unit time. We now seek separate expressions for $∆S$ and $∆R$ as functions of bucket quantities and time in order to prove the claim above. 

While the Treasury $R$ consists of the three buckets, its real value $R_v$ doesn’t necessarily equal the sum of their content $q_r +q_d+q_p$ since not every bucket may achieve the same return as the market rate $r_m$. Supposing that $r_r = r_p = r_m ≠ r_d$, we can try to estimate$R_v$ by applying correction factors $c_d$ and $c_p$ to $q_d$ and $q_p$ respectively. This allows us to value the current Treasuy as 

$$
R_v = q_r + c_dq_d+c_pq_p
$$

If we take the yield on $R$ into account and suppose that all bond holders who trade in immediately sell the received bDFI for DFI and rebond them, we can express the absolute change of $R_v$ for a given time step $∆t$ as

$$
∆R_v = \frac{∆t}{365}r_m(q_r+q_p)+\frac{∆t}{365}r_dq_d+c_p∆Sp_f \tag{40}
$$

with the last term expressing the value change due to the influx of new DFI per timestep from rebonding based on an exchange at the current fair price. Note that the rebonded capital must be adjusted by a correction factor $c_p$, while no such adjustment is necessary for the yield as it is incorporated into the Reserve Bucket (assuming $r_r = r_m$).

$\Delta S$ represents the change in the bDFI supply $S$ per $\Delta t$. Based on our assumption, this entire change will be rebonded. To calculate $\Delta S$, we use $q_p$ to symbolize the collective holdings of all bond holders and make the simplifying assumption that bonding activity is evenly distributed in terms of volume and bonding times, and that all initial bonding occurs within one $T_{opt}$ period.

Therefore, the fraction of the user base that trades in (and rebonds) per time step is constant, corresponding to the total pending bonds divided by the length of the period, i.e. $\frac{q_p}{T_{opt}}$.
Given the optimal rebonding time $T_{opt}$, we can thus treat the trade-in fraction $\frac{q_p}{T_{opt}}$ for a given time unit $∆t$ as if it was one aggregate bond which has accrued $s(T_{opt})$bDFI upon trade in. 

Thus, we have

$$
∆S = s(T_{opt}) = \frac{q_p}{T_opt}\frac{1}{p_r}\frac{T_{opt}}{T_{opt}+\alpha} = \frac{S}{q_r}\frac{q_p}{T_{opt}+\alpha} \tag{41}
$$

Similarly, for the version with a controller targeting an average chicken in time $T_t$ (see section 5.3), using the equation (69) for $\alpha$, we can derive 

$$
∆S = q_p\frac{S}{q_r}\frac{1}{T_t+\alpha} = \frac{S}{q_r}\frac{q_p}{T_t+T_t\frac{\frac{p_f}{p_r}-1}{1+\sqrt{\frac{p_f}{p_r}}}} = \frac{S}{q_r}\frac{q_p}{T_t+T_t\frac{\lambda-1}{1+\sqrt\lambda}} \tag{42}
$$

The question is how to determine the correction factors in equations $39$ and $40$ and how it affects the resulting fair price estimation. Using the naive fair price (equation 37), we have: 

$$
c_d = q_d \frac{r_d}{r_r}, c_p = 1 \tag{43}
$$

In other words, we’re not correcting the Pending Bucket but supposing that rebonding cancels out the effect of trading ins on the fair proice, consisting in a transition of funds from $q_p$ to $q_r$ and $q_d$ and the minting of more bDFI. 

We can now plot equation $38$ for the two versions with and without a dynamically controlled $\alpha$: 

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/432f1925-a369-4812-9b50-6a928fc9e986/Untitled.png)

The purple line in the graph represents the fair price (on the y-axis) as a solution to equation 38, with the Pending Bucket ($q_p$) on the x-axis, and fixed parameters of $q_r = 1, q_d = 2, S = 1, r_r = r_p = 0.1$, and r_d = 0.05. The red line shows the fair price for a controlled version with a time period of $T_t = 30$ and a variable $\alpha$.

For comparison, the green line represents the naive fair price given by equation $36$. It is evident that both the upper branch of the purple curve and the red curve approximate the naive fair price formula for sufficiently high values of $q_p$.

This suggests that the naive fair price formula accurately captures the property that the Treasury value and the bDFI supply grow at a similar rate, provided that existing users keep rebonding and there are no new bond creations.

What happens if we discount the effect of $q_p$ on the fair price by settings $c_p = 0.7$ for example? 

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e7e08d5e-8674-4f82-8ca7-aee0f9e231bf/Untitled.png)

Note that the two versions of the fair price resulting from $38$ are still very similar for large $q_p.$ 

However, they now diverge from the corrected fair price formula shown in green given by: 

$$
p_f = \frac{q_r + 0.7q_p + q_d \frac{r_d}{r_r}d_f}{S} \tag{44}
$$

this seems to imply that only the naive fair price formula with $c_p = 1$  satisfies the property of an equal growth of $R_v$ and $S$- 

**Immediate effect of rebonding on the fair price** 

Can we thus deduct that (optimal( rebonding has no direct impact on the naive fair price at all? 

It turns out that this is only true for the special case where $r_d = r_r$ . Otherwise, the result may look like this: 

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5d36d63c-c7d6-4aaf-9290-e0a5e13ea362/Untitled.png)

For $r_d < r_r,$ rebonding negatively impacts the fair price, as can be seen in the chart above which shows the fair price before (green) and after (blue) rebonding the entire Pending Bucket at $T_{opt}$ for $q_r = 1,$ $q_d = 2,$ $S = 1,$ $r_r = r_p = 0.1,$ $r_d = 0.05$  and a fixed $\alpha = 30.$

This result is intuitive because as more users trade in and rebond later, a larger portion of the Treasury earns a lower yield.

On the other hand, the $\alpha$ parameter has no effect on the price curve and it doesn't matter whether the controller is turned on and at what time $t_t$ it targets.

This seemingly contradictory result may be due to the fact that while rebonding negatively impacts the naive fair price, the higher yield on the Pending Bucket compensates for this and ensures that the Treasury and bDFI supply grow at the same rate as a whole.

## 4.3.2. Recursive approach

Instead of relying on the oversimplified assumption that trade-ins and rebonding cancel out as in the naive approach (Section 4.3.1), we can attempt to estimate the future changes to the buckets based on historic user behavior or optimal expected behavior.

To model the changes in the TKN quantities in the buckets, we use the notations $∆q_r, ∆q_p$ and $∆q_d$. We also define $P_{In}$ as the probability that a bond holder will trade in and $P_{Out}$ as the probability that a bond holder will trade out.

Assuming a user base with an infinitely fine granularity, we apply these probabilities to all users collectively (i.e., to the buckets themselves), enabling us to model the overall flow of tokens between the buckets.

With that we can express the fair price $p_f$  in a recursion step as 

$$
p_f = \frac{q_b + q_p (1-P_{In}-P_{Out})+(q_r+P_{In}∆q_r)+(q_d+P_{In}∆q_d)\frac{r_d}{r_m}d_d}{S_{sLQTY}+\frac{P_{In}∆q_r}{p_r}} \tag{45}
$$

where $q_b$ stands for the amount bonded at the end of recursion step. As $p_r = \frac{q_r}{S_{sLQTY}}$, we can express the above equation as:

$$
p_f = \frac{q_b + q_p(1-P_{In}P_{Out})+(q_r+P_{In}∆q_r)+(q_d+P_{In}∆q_d)\frac{r_d}{r_m}d_d}{S_{sLQtY}+(1+P_{In}∆q_r\frac{1}{q_r})} \tag{46}
$$

Assumptions:

1. $P_{In} + P_{Out} \le 1$
2. $P_{Out} = 0,$  as long as bonding is profitable
3. $P_{Out} = 1$  if bonding is not profitable
4. There is no user churn. Current users keep rebonding. 

We simplify our assumptions by assuming that bonding activity occurs more or less evenly over time and that bonders who have reached their optimal rebonding time will trade in with a probability of $P_{In} = 1$, while no one will trade in before reaching that point. This allows us to divide bonders into two segments: those before and those after rebonding.

We model $P_{In}$ for a randomly selected bonder by setting it to the reciprocal of the optimal rebonding time. This allows us to estimate the probability of trade-ins based on the bonder's individual rebonding time.

$$
P_{In} = min(1, \frac{1}{T_{opt}}) \tag{47}
$$

### **Bucket changes based on history**

We can estimate $∆q_r$ and $∆q_d$ based on the historic average, assuming that users would rebond when reaching the same fraction of their cap as in the past: 

$$
∆q_r = q_p \frac{q_r}{q_r+q_d} \tag{48}
$$

$$
∆q_d = q_p \frac{q_r}{q_r+q_d} \tag{49}
$$

There should also exist a historical average rebonding period $\bar{T}$ corresponding to the current relation between $q_r$ and $q_d$:

$$
\frac{q_r}{q_r+q_d} = \frac{\bar{T}}{\bar{T}+1} \tag{50}
$$

$$
\bar{T} = \frac{q_r}{q_d} \tag{51}
$$

Even though $\bar{T}$ may not necessarily reflext the optimal rebonding strategy, we can use it to estimate $P_{In}$:

$$
P_{In} = \frac{1}{\bar{T}}= \frac{q_d}{q_r} \tag{52}
$$

This leads to the following fair price (where $q_b$ stands for the rebonded amount):

$$
p_f = \frac{q_b+q_p(1-\frac{q_d}{q_r}+(q_r+\frac{q_d}{q_r}q_p\frac{q_r}{q_r+q_d})+(q_d+\frac{q_d}{q_r}q_p\frac{q_d}{q_r+q_d})\frac{r_d}{r_m}d_d}{S_{sLQTY}(1+(\frac{q_d}{q_r}q_p\frac{q_r}{q_r+q_d}\frac{1}{q_r})}
$$

$$
p_f = \frac{q_b+q_p(1-\frac{q_d}{q_r})+q_r(1+\frac{q_d}{q_r}\frac{q_p}{q_r+q_d})+q_d(1+\frac{q_d}{q_r}\frac{q_p}{q_r+q_d}\frac{r_d}{r_m}d_d)}{S_{sLQTY}(1+\frac{q_d}{q_r}\frac{q_p}{q_r+q_d})} 
$$

$$
p_f = \frac{q_b+q_p(1-\frac{q_d}{q_r})}{S_{sLQTY}(1+\frac{q_d}{q_r}\frac{q_p}{q_r+q_d})} + \frac{q_r+q_d\frac{r_d}{r_m}d_d}{S_{sLQTY}} \tag{53}
$$

Assuming all rebonders an sell their bDFI at the fair price without incurring any slippage, we can express $q_b$ as follows: 

$$
q_b = p_fP_{In}∆q_r\frac{1}{p_r}=\frac{q_d}{q_r}q_p\frac{q_r}{q_r+q_d}\frac{p_f}{p_r}=q_p \frac{q_d}{q_r+q_d}\frac{p_f}{p_r} \tag{54}
$$

Resulting in 

$$
p_f = \frac{q_p (1+ \frac{q_d}{q_r+q_d}\frac{p_f}{p_r}-\frac{q_d}{q_r})}{S_{sLQTY}(1+\frac{q_d}{q_r}\frac{q_p}{q_r+q_d})}+\frac{q_r+q_d\frac{r_d}{r_d}r_d}{S_{sLQTY}} \tag{55}
$$

**Bucket changes based on optimal rebonding strategy**

One could use the optimal (future) rebonding time instead of deducting the historical average: 

$$
∆q_r=q_p\frac{T_{opt}}{T_{opt}+1} \tag{56}
$$

$$
∆q_d=q_p(1-\frac{T_{opt}}{T_{opt}+1}) \tag{57}
$$

This leads to:

$$
p_f = \frac{q_b+q_p(1-\frac{1}{T_{opt}})+(q_r+1\frac{1}{T_{opt}}q_p\frac{T_{opt}}{T_{opt+1}})+(q_d+\frac{1}{T_{opt}}q_p(1-\frac{T_{opt}}{T_{opt+1}})\frac{r_d}{r_m}d_d}{S_{sLQTY}(1+\frac{1}{T_{opt}}q_p\frac{T_{opt}}{T_{opt+1}}{\frac{1}{q_r}})}
$$

$$
p_f = \frac{q_b+q_p(1-\frac{1}{T_{opt}})+(q_r+\frac{q_p}{T_{opt+1}})+(q_d+\frac{q_p}{T_{opt}}-\frac{q_p}{T_{opt+1}})\frac{r_d}{r_m}d_d}{S_{sLQTY}(1+\frac{1}{T_{opt+1}}{\frac{q_p}{q_r})}}
$$

$$
p_f = \frac{q_b+q_p(1-\frac{1}{T_{opt}})+(q_r+\frac{q_p}{T_{opt+1}})+(q_d+\frac{q_p}{T_{opt}}-\frac{q_p}{T_{opt+1}})\frac{r_d}{r_m}d_d}{S_{sLQTY}(1+\frac{1}{T_{opt+1}}{\frac{q_p}{q_r})}}
$$

$$
p_f=\frac{q_b+q_p(1+\frac{1}{T_{opt}}(\frac{r_d}{r_m}d_d-1)+\frac{1}{T_{opt+1}}(1-\frac{r_d}{r_m}d_d))+q_r+q_d+\frac{r_d}{r_m}d_d}{S_{sLQTY}(1+\frac{1}{T_{opt}+1}\frac{q_p}{q_r})} \tag{58}
$$

With $\frac{r_d}{r_m}d_d=1$

$$
p_f=\frac{q_b+q_p+q_r+q_d}{S_{sLQTY}(1+\frac{1}{T_opt+1}\frac{q_p}{q_r})} \tag{59}
$$

For constant rebonding: 

$$
q_b = q_p \frac{1}{T_{opt}}\frac{T_{opt}}{T_{opt}+1}\frac{p_f}{p_r}=\frac{q_p}{T_{opt}+1}\frac{p_f}{p_r} \tag{60}
$$

This leads to: 

$$
p_f=\frac{\frac{q_p}{T_{opt}+1}\frac{p_f}{p_r}(1+\frac{1}{T_{opt}}(\frac{r_d}{r_m}d_d-1)+\frac{1}{T_{opt+1}}(1-\frac{r_d}{r_m}d_d))+q_r+q_d+\frac{r_d}{r_m}d_d}{S_{sLQTY}(1+\frac{1}{T_{opt}+1}\frac{q_p}{q_r})} 
$$

With $\frac{r_d}{r_m}d_d =1$

$$
p_f=\frac{q_p(1+\frac{1}{T_{opt}+1}\frac{p_f}{p_r})+q_r+q_d}{{S_{sLQTY}(1+\frac{1}{T_{opt}+1}\frac{q_p}{q_r})} } \tag{62}
$$

We have tried to validate results from this section without success. For instance below we have charts for the historic variant of the recursive approach. We can see non-convergence and really weird behaviour starting from iteration 10.

**4.4. Self-reinforcing price impact**

It follows from Equations 23 that a higher premium, denoted by $\lambda$, leads to a shorter rebonding period, $t$, which is also true for 30 and the break-even time in 15. As a result, bonders are likely to trade in their bonds earlier, resulting in a higher fraction of bonds transitioning into the Permanent Bucket. This, in turn, makes the premium more sustainable and may positively impact the fair price of bDFI.

If the market price of bDFI increases while other factors remain constant, the likelihood of the price continuing to rise in the future due to earlier trade-ins increases. Although this effect may not always be immediate, a significant increase in bDFI price could push bonders beyond their optimal rebonding times, assuming perfectly rational behavior, which would then result in immediate trade-ins and rebonding.

## 4.5 Self-stabilizing effect of redemptions and its help to regain traction

The redemptions of bDFI for DFI not only reduce the Reserve Bucket but also the overall bDFI supply, thus indirectly increasing the influence of the Permanent and Pending Buckets on the bDFI price through an amplified yield. This results in a growth in the fair price and expected premium, even though the redemption price remains unchanged.

This creates a self-stabilizing effect of redemptions, where there should be an equilibrium state with a positive $q_r$ where $p_r = p_f$, making further redemptions and a complete depletion of the Reserve Bucket unlikely. This means that a portion of the Reserve Bucket will behave like a permanent asset.

Additionally, fluctuations in the market price $p_m$ compared to $p_f$ can help the system recover its stability if it reaches a state where $p_f = p_r$. If the market temporarily prices bDFI lower than its fair price ($p_m < p_f$), redemptions will trigger and increase $p_f$, making it more likely for the market to return to $p_m > p_r$ and re-igniting bonding activity. This cycle can repeat even if $q_p = 0$, meaning when bonding activity has come to a complete stop.

## Bootstrapping

To address the issues arising from the initial phase of the bDFI launch, the initial redemption price at the time of the first trade-in can be set to $p_r = 1$. This will allow the calculation of the accrued amount $s(t)$ during the bootstrapping period when the bDFI supply and the Reserve Bucket are empty.

Moreover, to ensure fairness, the accumulated yield of the Pending Bucket that would normally belong to the Reserve Bucket can be used to reward the liquidity providers (LPs) who are bootstrapping the bDFI/DFI DEX pair (as discussed in section 5.5). This will compensate for the yield earned on the Pending Bucket before the first trade-in event occurs.

## 5.3. Automatically adjusting the steepness $\alpha$ of the accruel curve

The break even point and optimal rebonding time, as defined in equations 15, 23, 30, and 33, are significantly impacted by both the premium $\lambda$ and the steepness of the bDFI accrual curve $s(t)$, represented by $\alpha$.

Simulations have indicated that the premium $\lambda$ tends to decrease over time as the system matures. This would result in an increase in the break even and optimal rebonding times, leading to a decrease in the APR and a reduction in the attractiveness of bonds. To address this issue, the system can automatically adjust $\alpha$ to keep the optimal bonding duration constant. A controller can monitor the average outstanding bond age, and decrease $\alpha$ by a specified factor when the average age exceeds the target age $T_\alpha$. With an even distribution of bond creation dates, the target average trade-in time can be calculated as $T_t = 2T_\alpha$.

## 5.4 Redemption fee

To control the flow of DFI from the Reserve Bucket, the system will implement a *redemption fee* for bDFI redemptions. This means that the redeemer of $n$ bDFI will receive slightly less DFI than their pro rata share, i.e. $x < np_r$, with the difference $(np_r-x)$ either staying in the Reserve Bucket or being transferred to the Permanent Bucket.

Both options will result in an increase in the fair price of bDFI through the captured fee, in addition to the positive impact of the redemption on $p_f$ (as described in section 4.5). However, if the fee is kept in the Reserve Bucket, it will also increase the redemption price $p_r$, potentially leading to interference and causing concern among bond holders. To prevent this, it may be better to direct the fee revenue to the Permanent Bucket, which will promote a more sustainable growth in the bDFI premium.

To regulate redemptions, an exponentially decaying fee schedule could be implemented. The fee will increase after each redemption in proportion to the redeemed amount, and will decay over time to reach a minimum when no redemptions are taking place.

## 5.5 Trade-in fee to incentivize bDFI/DFI LPs

Having a liquid bDFI/DFI market is essential for bondholders to exit their positions or rebond. To achieve this, the system can incentivize Liquidity Providers (LPs) to add liquidity to the bDFI/DFI DEX pair by allocating a portion of the bonded amount every time a trade occurs.

The close price correlation between DFI and bDFI, compared to two arbitrary volatile assets, reduces the expected impermanent loss. This correlation could impact the choice of Automated Market Maker (AMM), allowing for custom trading curves that optimize for lower slippage. To fund these incentives, a fee can be charged on the amount of bDFI paid out during a trade in, as described in section 3.1.2. This incentive scheme is synchronized with the needs of the system and current bondholders who want to exit, as it is directly linked to the bonding activity.

## Conclusion

The JellyBond, inspired by the original design of Chicken Bonds, allows JellyLabs to launch its own version of a Price Oracle Locked (POL) without incurring costs. The system creates a virtuous cycle between bonding and the bDFI market price. As more people participate in bonding, the yield for bDFI holders increases, boosting the price premium over the underlying DFI. This, in turn, leads to a higher Annual Percentage Return (APR) for bonding, making it even more attractive to users. The opportunity cost for participants serves as the foundation for its performance. At the same time, the protocol can accumulate both permanent and redeemable DFI, which can be allocated to various purposes based on the current needs of DeFiChain and DeFiMetaChain and governed by JellyLabs.